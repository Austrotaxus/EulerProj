
==================== FINAL INTERFACE ====================
2016-11-10 21:12:41.456186 UTC

interface Euler_CXKf0AA2Udw4JRL7DCOEOh:Lib.Task25 7103
  interface hash: 5297169dd90d83488ad3d6b92123e0ce
  ABI hash: 0caa77bbd701125bb5d56be63980a5a2
  export-list hash: 9b0d62712c0419f3bf826d241421e5f7
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: be56b72bd91dfdcf4558dd23faf8380d
  sig of: Nothing
  used TH splices: False
  where
exports:
  Lib.Task25.fibs
  Lib.Task25.task25
module dependencies:
package dependencies: base-4.8.2.0* ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:GHC.Generics
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:Data.List 3f0782c8d4bf50eecefcd5ea1798aac8
import  -/  base-4.8.2.0:Data.Maybe 1cb58de2b04ee3c0c0a7dc9201184aff
import  -/  base-4.8.2.0:Data.OldList d8fd80b0e14aa085ce6219cd89dad356
import  -/  base-4.8.2.0:Data.Tuple 012ad951a59a9d85fe1de36a2f012986
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.2.0:GHC.Real 1281efa9baf803bc7859d7efb89a38b3
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  integer-gmp-1.0.0.0:GHC.Integer.Type 371e90fe753f08ddedf0d2657a9ef5c4
f451c1971a3aa7439963a7ff58a7f40b
  $wgo ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer
    -> (# (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer),
          [(GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)] #)
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0] -}
7823797fae09634dad088780dec92963
  fibs :: [(GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)]
  {- Unfolding: (case Lib.Task25.$wgo
                        Lib.Task25.fibs1
                        Lib.Task25.fibs1
                        Lib.Task25.fibs1 of ww { (#,#) ww1 ww2 ->
                 GHC.Types.:
                   @ (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)
                   ww1
                   ww2 }) -}
2839d8ec636ed0c5fff5f53cb41919c4
  fibs1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 1) -}
cb1347acbf063ce7c0b71154cf8e7a41
  task25 :: GHC.Integer.Type.Integer
  {- Unfolding: (case (Lib.Task25.task25_go Lib.Task25.fibs)
                        `cast`
                      (Data.Monoid.NTCo:First[0] <(GHC.Integer.Type.Integer,
                                                   GHC.Integer.Type.Integer)>_N) of wild {
                   GHC.Base.Nothing
                   -> case Data.Maybe.fromJust1 ret_ty GHC.Integer.Type.Integer of {}
                   GHC.Base.Just x -> case x of wild1 { (,) ds1 y -> y } }) -}
ad8c34b8f8cde389961cdaca20f1e84c
  task25_go ::
    [(GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)]
    -> Data.Monoid.First
         (GHC.Integer.Type.Integer, GHC.Integer.Type.Integer)
  {- Arity: 1, Strictness: <S,1*U> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

