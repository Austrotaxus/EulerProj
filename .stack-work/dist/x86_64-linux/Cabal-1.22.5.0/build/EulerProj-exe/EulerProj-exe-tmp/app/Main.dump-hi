
==================== FINAL INTERFACE ====================
2016-11-10 21:12:43.287793 UTC

interface main@main:Main 7103
  interface hash: 3dbfb1366592c71a765da74763bb47c9
  ABI hash: c35b05210a01fb540aeb64cb51251bb3
  export-list hash: f2a1b84f78b47057fb5eaaa6c53c86e5
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: a88b77e6774f026a70d62f666b63c862
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.main
module dependencies:
package dependencies: EulerProj-0.1.0.0@Euler_CXKf0AA2Udw4JRL7DCOEOh
                      arithmoi-0.4.1.3@arith_C4c4JmqdUJaEBNAlRHjNlW
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA base-4.8.2.0
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59 ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0 mtl-2.2.1@mtl_Aue4leSeVkpKLsfHIV51E8
                      primes-0.2.1.0@prime_KJP3fXLypK4KWfAjY8Wn1z
                      random-1.1@rando_9Kgekc9yEaLHLNUuw6paWL
                      time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Calendar.Gregorian
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Format.Parse
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.LocalTime.LocalTime
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Functor.Identity
                         base-4.8.2.0:Data.Monoid base-4.8.2.0:Data.Type.Equality
                         base-4.8.2.0:Data.Void base-4.8.2.0:GHC.Exts
                         base-4.8.2.0:GHC.Generics
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntMap.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntSet.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
import  -/  EulerProj-0.1.0.0@Euler_CXKf0AA2Udw4JRL7DCOEOh:Lib 04c89a6f8e3800f260f495a5b5a702c1
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.Show 0e1d8380a8fb0cfb07ebeda3b70cbf38
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  base-4.8.2.0:System.IO 0248c1e850b7ea124cf7a2e1669ebf67
import  -/  containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map 1800ccac43fd924c376b60eac12f4d04
import  -/  containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base 642e37808d03e24efbe8e8ff1336f343
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
060e213c1f9fcc73867881b8aabad574
  $wpoly_go10 ::
    GHC.Prim.Int# -> Data.Map.Base.Map GHC.Types.Int a -> a
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0] -}
3cceee27ed1c41ca226f67feea3de5ed
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
5789c2f392a4af41ecbf9b0c2f686b01
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main3
                        GHC.Types.True
                        s of ds1 { (#,#) ipv ipv1 ->
                 case GHC.IO.Handle.Internals.wantReadableHandle_1
                        @ GHC.Base.String
                        GHC.IO.Handle.Text.hGetLine4
                        GHC.IO.Handle.FD.stdin
                        GHC.IO.Handle.Text.hGetLine2
                          `cast`
                        (<GHC.IO.Handle.Types.Handle__>_R
                         ->_R Sym (GHC.Types.NTCo:IO[0] <GHC.Base.String>_R))
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case System.IO.readIO8
                        @ GHC.Types.Int
                        (Text.ParserCombinators.ReadP.run
                           @ GHC.Types.Int
                           Main.main2
                           ipv3) of wild {
                   []
                   -> case GHC.Prim.raiseIO#
                             @ GHC.Exception.SomeException
                             @ GHC.Types.Int
                             System.IO.readIO5
                             ipv2
                      ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                      of {}
                   : x ds
                   -> case ds of wild1 {
                        []
                        -> case x of ww { GHC.Types.I# ww1 ->
                           case (Main.$wpoly_go10
                                   @ (GHC.Types.IO GHC.Base.String)
                                   ww1
                                   Lib.allTasks)
                                  `cast`
                                (GHC.Types.NTCo:IO[0] <GHC.Base.String>_R)
                                  ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                           GHC.IO.Handle.Text.hPutStr2
                             GHC.IO.Handle.FD.stdout
                             (GHC.Show.$fShow[]_$s$cshow1 ipv5)
                             GHC.Types.True
                             ipv4 } }
                        : ipv4 ipv5
                        -> case GHC.Prim.raiseIO#
                                  @ GHC.Exception.SomeException
                                  @ GHC.Types.Int
                                  System.IO.readIO2
                                  ipv2
                           ret_ty (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                           of {} } } } }) -}
91bdf8bcef5254b7fd63e3556d15b0da
  main2 :: Text.ParserCombinators.ReadP.P GHC.Types.Int
  {- Unfolding: ((GHC.Read.$fReadInt3
                    GHC.Read.$fReadInt_$sconvertInt
                    Text.ParserCombinators.ReadPrec.minPrec)
                   `cast`
                 (Text.ParserCombinators.ReadP.NTCo:ReadP[0] <GHC.Types.Int>_R)
                   @ GHC.Types.Int
                   (Text.ParserCombinators.ReadP.$fApplicativeP_$creturn
                      @ GHC.Types.Int)) -}
3a6e61f439c2cbc61ee0d70955063337
  main3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.shows6
                   Main.main4) -}
b3b04397a3292652b7d370699114cd14
  main4 :: GHC.Base.String
  {- Unfolding: (GHC.Show.showLitString Main.main6 Main.main5) -}
b66e53d89f66f8f84b25e0f19b212440
  main5 :: [GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.shows6
                   (GHC.Types.[] @ GHC.Types.Char)) -}
e446417778e0a1042b4873a729a4ea00
  main6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "The tasks are already implemented: "#
                   Main.main7) -}
9ae2d51e0a19c6f6670a3d16d5d87a08
  main7 :: [GHC.Types.Char]
  {- Unfolding: (case Data.Map.Base.keys1
                        @ GHC.Types.Int
                        @ (GHC.Types.IO GHC.Base.String)
                        (GHC.Types.[] @ GHC.Types.Int)
                        Lib.allTasks of wild {
                   []
                   -> GHC.CString.unpackAppendCString#
                        "[]"#
                        (GHC.Types.[] @ GHC.Types.Char)
                   : x xs
                   -> GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.showList__3
                        (case x of ww { GHC.Types.I# ww1 ->
                         case GHC.Show.$wshowSignedInt
                                0
                                ww1
                                (Main.main_showl xs) of ww2 { (#,#) ww3 ww4 ->
                         GHC.Types.: @ GHC.Types.Char ww3 ww4 } }) }) -}
fcb1d9fa2158f2fa6a3e13540df2e6d1
  main8 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
b4eaf7636e5386264776d8173eb4a8c3
  main_showl :: [GHC.Types.Int] -> [GHC.Types.Char]
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

